Results:
 1)WatDiv :
 For 100K triples : 
  Count: 105384
  Loading Time (in milliseconds): 9175
  
  Execution Time for query (millisecond) 1 = 41
  Execution Time for query (millisecond) 2 = 44
  Execution Time for query (millisecond) 3 = 48
  Execution Time for query (millisecond) 4 = 13
  Execution Time for query (millisecond) 5 = 24
  Execution Time for query (millisecond) 6 = 10
  Execution Time for query (millisecond) 7 = 76
  Execution Time for query (millisecond) 8 = 25
  Execution Time for query (millisecond) 9 = 8
  Execution Time for query (millisecond) 10 = 20
  Execution Time for query (millisecond) 11 = 25
  Execution Time for query (millisecond) 12 = 12
  Execution Time for query (millisecond) 13 = 5
  Execution Time for query (millisecond) 14 = 790
  Execution Time for query (millisecond) 15 = 5
  Execution Time for query (millisecond) 16 = 5
  Execution Time for query (millisecond) 17 = 9
  Execution Time for query (millisecond) 18 = 7
  Execution Time for query (millisecond) 19 = 5
  Execution Time for query (millisecond) 20 = 4

  For 200K triples : 
  Count: 214819
  Loading Time (in milliseconds): 11544
  
  Execution Time for query (millisecond) 1 = 105
  Execution Time for query (millisecond) 2 = 155
  Execution Time for query (millisecond) 3 = 198
  Execution Time for query (millisecond) 4 = 38
  Execution Time for query (millisecond) 5 = 167
  Execution Time for query (millisecond) 6 = 35
  Execution Time for query (millisecond) 7 = 791
  Execution Time for query (millisecond) 8 = 83
  Execution Time for query (millisecond) 9 = 24
  Execution Time for query (millisecond) 10 = 13
  Execution Time for query (millisecond) 11 = 7
  Execution Time for query (millisecond) 12 = 8
  Execution Time for query (millisecond) 13 = 11
  Execution Time for query (millisecond) 14 = 4953
  Execution Time for query (millisecond) 15 = 24
  Execution Time for query (millisecond) 16 = 35
  Execution Time for query (millisecond) 17 = 13
  Execution Time for query (millisecond) 18 = 25
  Execution Time for query (millisecond) 19 = 9
  Execution Time for query (millisecond) 20 = 14
  
 For 300K triples : 
  Count: 321027
  Loading Time (in milliseconds): 16291
  
  Execution Time for query (millisecond) 1 = 705
  Execution Time for query (millisecond) 2 = 24
  Execution Time for query (millisecond) 3 = 26
  Execution Time for query (millisecond) 4 = 6
  Execution Time for query (millisecond) 5 = 15
  Execution Time for query (millisecond) 6 = 10
  Execution Time for query (millisecond) 7 = 58
  Execution Time for query (millisecond) 8 = 18
  Execution Time for query (millisecond) 9 = 7
  Execution Time for query (millisecond) 10 = 5
  Execution Time for query (millisecond) 11 = 4
  Execution Time for query (millisecond) 12 = 5
  Execution Time for query (millisecond) 13 = 4
  Execution Time for query (millisecond) 14 = 1062
  Execution Time for query (millisecond) 15 = 6
  Execution Time for query (millisecond) 16 = 12
  Execution Time for query (millisecond) 17 = 6
  Execution Time for query (millisecond) 18 = 13
  Execution Time for query (millisecond) 19 = 15
  Execution Time for query (millisecond) 20 = 6
  
For 500K triples : 
  Count: 544648
  Loading Time (in milliseconds): 24785
  
  Execution Time for query (millisecond) 1 = 952
  Execution Time for query (millisecond) 2 = 1150
  Execution Time for query (millisecond) 3 = 1963
  Execution Time for query (millisecond) 4 = 589
  Execution Time for query (millisecond) 5 = 362
  Execution Time for query (millisecond) 6 = 207
  Execution Time for query (millisecond) 7 = 62
  Execution Time for query (millisecond) 8 = 553
  Execution Time for query (millisecond) 9 = 178
  Execution Time for query (millisecond) 10 = 137
  Execution Time for query (millisecond) 11 = 5
  Execution Time for query (millisecond) 12 = 4
  Execution Time for query (millisecond) 13 = 4
  Execution Time for query (millisecond) 14 = 1304
  Execution Time for query (millisecond) 15 = 5
  Execution Time for query (millisecond) 16 = 49
  Execution Time for query (millisecond) 17 = 219
  Execution Time for query (millisecond) 18 = 6
  Execution Time for query (millisecond) 19 = 321
  Execution Time for query (millisecond) 20 = 3


For 1M triples : 
  Count: 1092343
  Loading Time (in milliseconds): 54375
 
4)SP2Bench
Loading time for  :
  Count : 50168
  Loading time in milliseconds : 3598

Querying time for  :

  Execution Time for query (millisecond) 1 = 10
  Execution Time for query (millisecond) 2 = 257
  Execution Time for query (millisecond) 3 = 35
  Execution Time for query (millisecond) 4 = 7
  Execution Time for query (millisecond) 5 = 6
  Execution Time for query (millisecond) 6 = 24
  Execution Time for query (millisecond) 7 = 31
  Execution Time for query (millisecond) 8 = 25
  Execution Time for query (millisecond) 9 = 83
  Execution Time for query (millisecond) 10 = 22
  Execution Time for query (millisecond) 11 = 34
  Execution Time for query (millisecond) 12 = 11
  Execution Time for query (millisecond) 13 = 33
  


3)LUBM
Loading time for 
a)2 Universities : 
  Count: 230530
  Total time for loading in milliseconds: 9481

b)4 University :
  Count: 478219
  Total time for loading in milliseconds: 21736
  
c)6 University :
  Count: 723169
  Total time for loading in milliseconds: 22501 
  
d)8 University :
  Count: 1001716
  Total time for loading in milliseconds: 31975
  
e)16 University :
  Count: 2068728
  Total time for loading in milliseconds: 53881


For LUBM : inferencing has been tried using Open Coded Inference where all combinations of subclass and subproperty relations are expressed as unions. 
Link : http://vos.openlinksw.com/owiki/wiki/VOS/VOSArticleLUBMBenchmark
